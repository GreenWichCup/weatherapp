{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Greenwich\\\\JsApp\\\\CreateReactApp\\\\weatherapp\\\\src\\\\components\\\\weatherCard_component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.css\";\nimport FavoritesWeatherList from \"./favorites_list.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet storedFavorites = localStorage.getItem(\"favoritesWeather\");\nconst WeatherCard = () => {\n  _s();\n  let data = useSelector(state => state.weatherReducer);\n  const [photo, setPhoto] = useState(\"\");\n  const [favoriteList, setFavoriteList] = useState([]);\n  const [isToggled, setIsToggled] = useState(false);\n  const fahrenheit = data[0].temp * 1.8 - 459.67;\n  const celsius = Math.floor(data[0].temp - 273.15);\n  const addToFavorite = async () => {\n    if (!favoriteList.includes(data[0])) {\n      setFavoriteList([...favoriteList, data[0]]);\n    }\n  };\n  const removeFavorite = () => {\n    const newList = favoriteList.filter(fav => fav.id !== data[0].id);\n    setFavoriteList([...newList]);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"favoritesWeather\", JSON.stringify(favoriteList));\n    console.log(\"list after state changed favorites\", favoriteList);\n  }, [favoriteList]);\n\n  // TODO : refactor code => transfer function somewhereElse\n  const weatherImg = useCallback(() => {\n    let value;\n    switch (data[0].weather.toLowerCase()) {\n      case \"rain\":\n      case \"thunderstorm\":\n      case \"drizzle\":\n        value = require(\"../assets/rainy.png\");\n        break;\n      case \"clouds\":\n      case \"smoke\":\n      case \"fog\":\n      case \"haze\":\n      case \"dust\":\n      case \"sand\":\n      case \"mist\":\n        value = require(\"../assets/cloud.png\");\n        break;\n      case \"clear\":\n        value = require(\"../assets/sunny.png\");\n        break;\n      case \"snow\":\n        value = require(\"../assets/snowflake.png\");\n        break;\n      default:\n        break;\n    }\n    setPhoto(value);\n  }, [data]);\n  useEffect(() => {\n    if (data) {\n      weatherImg();\n    } else {\n      console.log(\"noData\");\n    }\n  }, [data, weatherImg]);\n  useEffect(() => {\n    if (storedFavorites) {\n      setFavoriteList(JSON.parse(storedFavorites));\n      console.log(\"on load stored favorites\", storedFavorites);\n    }\n  }, [favoriteList]);\n  return data[0].id !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FavoritesWeatherList, {\n      removeFavorite: removeFavorite,\n      data: favoriteList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"WEATHER RESULT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [data[0].name, \", \", data[0].country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        height: \"100px\",\n        width: \"100px\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"temp: \", celsius, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"humidity: \", data[0].humidity, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"wind: \", data[0].wind, \" miles/h \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToFavorite,\n          children: \"Add to favorite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FavoritesWeatherList, {\n      removeFavorite: removeFavorite,\n      data: favoriteList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-item\",\n      children: \"NO DATA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(WeatherCard, \"CAiaMGWQ5OtnWqwAIvPfBYFSfvE=\", false, function () {\n  return [useSelector];\n});\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useSelector","FavoritesWeatherList","jsxDEV","_jsxDEV","Fragment","_Fragment","storedFavorites","localStorage","getItem","WeatherCard","_s","data","state","weatherReducer","photo","setPhoto","favoriteList","setFavoriteList","isToggled","setIsToggled","fahrenheit","temp","celsius","Math","floor","addToFavorite","includes","removeFavorite","newList","filter","fav","id","setItem","JSON","stringify","console","log","weatherImg","value","weather","toLowerCase","require","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","country","src","height","width","alt","humidity","wind","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Greenwich/JsApp/CreateReactApp/weatherapp/src/components/weatherCard_component.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../redux/root-reducer\";\r\nimport \"../App.css\";\r\nimport { WeatherData } from \"../redux/actions_type\";\r\nimport FavoritesWeatherList from \"./favorites_list.component\";\r\n\r\nlet storedFavorites: string | null = localStorage.getItem(\"favoritesWeather\");\r\n\r\nconst WeatherCard = () => {\r\n\tlet data: WeatherData[] = useSelector(\r\n\t\t(state: RootState) => state.weatherReducer\r\n\t);\r\n\tconst [photo, setPhoto] = useState<string>(\"\");\r\n\tconst [favoriteList, setFavoriteList] = useState<WeatherData[]>([]);\r\n\r\n\tconst [isToggled, setIsToggled] = useState<boolean>(false);\r\n\tconst fahrenheit: number = data[0].temp * 1.8 - 459.67;\r\n\tconst celsius: number = Math.floor(data[0].temp - 273.15);\r\n\r\n\tconst addToFavorite = async () => {\r\n\t\tif (!favoriteList.includes(data[0])) {\r\n\t\t\tsetFavoriteList([...favoriteList, data[0]]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst removeFavorite = () => {\r\n\t\tconst newList = favoriteList.filter((fav) => fav.id !== data[0].id);\r\n\t\tsetFavoriteList([...newList]);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"favoritesWeather\", JSON.stringify(favoriteList));\r\n\t\tconsole.log(\"list after state changed favorites\", favoriteList);\r\n\t}, [favoriteList]);\r\n\r\n\t// TODO : refactor code => transfer function somewhereElse\r\n\tconst weatherImg = useCallback(() => {\r\n\t\tlet value;\r\n\t\tswitch (data[0].weather.toLowerCase()) {\r\n\t\t\tcase \"rain\":\r\n\t\t\tcase \"thunderstorm\":\r\n\t\t\tcase \"drizzle\":\r\n\t\t\t\tvalue = require(\"../assets/rainy.png\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"clouds\":\r\n\t\t\tcase \"smoke\":\r\n\t\t\tcase \"fog\":\r\n\t\t\tcase \"haze\":\r\n\t\t\tcase \"dust\":\r\n\t\t\tcase \"sand\":\r\n\t\t\tcase \"mist\":\r\n\t\t\t\tvalue = require(\"../assets/cloud.png\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"clear\":\r\n\t\t\t\tvalue = require(\"../assets/sunny.png\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"snow\":\r\n\t\t\t\tvalue = require(\"../assets/snowflake.png\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tsetPhoto(value);\r\n\t}, [data]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tweatherImg();\r\n\t\t} else {\r\n\t\t\tconsole.log(\"noData\");\r\n\t\t}\r\n\t}, [data, weatherImg]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (storedFavorites) {\r\n\t\t\tsetFavoriteList(JSON.parse(storedFavorites));\r\n\t\t\tconsole.log(\"on load stored favorites\", storedFavorites);\r\n\t\t}\r\n\t}, [favoriteList]);\r\n\treturn data[0].id !== 0 ? (\r\n\t\t<>\r\n\t\t\t<FavoritesWeatherList\r\n\t\t\t\tremoveFavorite={removeFavorite}\r\n\t\t\t\tdata={favoriteList}\r\n\t\t\t/>\r\n\t\t\t<div className=\"product-item\">\r\n\t\t\t\t<div>WEATHER RESULT</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{data[0].name}, {data[0].country}\r\n\t\t\t\t</div>\r\n\t\t\t\t<img src={photo} height=\"100px\" width=\"100px\" alt=\"\" />\r\n\t\t\t\t<div>temp: {celsius} </div>\r\n\t\t\t\t<div>humidity: {data[0].humidity}% </div>\r\n\t\t\t\t<div>wind: {data[0].wind} miles/h </div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={addToFavorite}>Add to favorite</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<FavoritesWeatherList\r\n\t\t\t\tremoveFavorite={removeFavorite}\r\n\t\t\t\tdata={favoriteList}\r\n\t\t\t/>\r\n\t\t\t<div className=\"product-item\">NO DATA</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WeatherCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAqB,aAAa;AAEtD,OAAO,YAAY;AAEnB,OAAOC,oBAAoB,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9D,IAAIC,eAA8B,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;AAE7E,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,IAAIC,IAAmB,GAAGX,WAAW,CACnCY,KAAgB,IAAKA,KAAK,CAACC,cAAc,CAC1C;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAgB,EAAE,CAAC;EAEnE,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAU,KAAK,CAAC;EAC1D,MAAMuB,UAAkB,GAAGT,IAAI,CAAC,CAAC,CAAC,CAACU,IAAI,GAAG,GAAG,GAAG,MAAM;EACtD,MAAMC,OAAe,GAAGC,IAAI,CAACC,KAAK,CAACb,IAAI,CAAC,CAAC,CAAC,CAACU,IAAI,GAAG,MAAM,CAAC;EAEzD,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACT,YAAY,CAACU,QAAQ,CAACf,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MACpCM,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEL,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C;EACD,CAAC;EAED,MAAMgB,cAAc,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAGZ,YAAY,CAACa,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKpB,IAAI,CAAC,CAAC,CAAC,CAACoB,EAAE,CAAC;IACnEd,eAAe,CAAC,CAAC,GAAGW,OAAO,CAAC,CAAC;EAC9B,CAAC;EAED9B,SAAS,CAAC,MAAM;IACfS,YAAY,CAACyB,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAAClB,YAAY,CAAC,CAAC;IACtEmB,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEpB,YAAY,CAAC;EAChE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMqB,UAAU,GAAGtC,WAAW,CAAC,MAAM;IACpC,IAAIuC,KAAK;IACT,QAAQ3B,IAAI,CAAC,CAAC,CAAC,CAAC4B,OAAO,CAACC,WAAW,EAAE;MACpC,KAAK,MAAM;MACX,KAAK,cAAc;MACnB,KAAK,SAAS;QACbF,KAAK,GAAGG,OAAO,CAAC,qBAAqB,CAAC;QACtC;MACD,KAAK,QAAQ;MACb,KAAK,OAAO;MACZ,KAAK,KAAK;MACV,KAAK,MAAM;MACX,KAAK,MAAM;MACX,KAAK,MAAM;MACX,KAAK,MAAM;QACVH,KAAK,GAAGG,OAAO,CAAC,qBAAqB,CAAC;QACtC;MACD,KAAK,OAAO;QACXH,KAAK,GAAGG,OAAO,CAAC,qBAAqB,CAAC;QACtC;MACD,KAAK,MAAM;QACVH,KAAK,GAAGG,OAAO,CAAC,yBAAyB,CAAC;QAC1C;MACD;QACC;IAAM;IAER1B,QAAQ,CAACuB,KAAK,CAAC;EAChB,CAAC,EAAE,CAAC3B,IAAI,CAAC,CAAC;EAEVb,SAAS,CAAC,MAAM;IACf,IAAIa,IAAI,EAAE;MACT0B,UAAU,EAAE;IACb,CAAC,MAAM;MACNF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACtB;EACD,CAAC,EAAE,CAACzB,IAAI,EAAE0B,UAAU,CAAC,CAAC;EAEtBvC,SAAS,CAAC,MAAM;IACf,IAAIQ,eAAe,EAAE;MACpBW,eAAe,CAACgB,IAAI,CAACS,KAAK,CAACpC,eAAe,CAAC,CAAC;MAC5C6B,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE9B,eAAe,CAAC;IACzD;EACD,CAAC,EAAE,CAACU,YAAY,CAAC,CAAC;EAClB,OAAOL,IAAI,CAAC,CAAC,CAAC,CAACoB,EAAE,KAAK,CAAC,gBACtB5B,OAAA,CAAAE,SAAA;IAAAsC,QAAA,gBACCxC,OAAA,CAACF,oBAAoB;MACpB0B,cAAc,EAAEA,cAAe;MAC/BhB,IAAI,EAAEK;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB,eACF5C,OAAA;MAAK6C,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC5BxC,OAAA;QAAAwC,QAAA,EAAK;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAEzB5C,OAAA;QAAAwC,QAAA,GACEhC,IAAI,CAAC,CAAC,CAAC,CAACsC,IAAI,EAAC,IAAE,EAACtC,IAAI,CAAC,CAAC,CAAC,CAACuC,OAAO;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B,eACN5C,OAAA;QAAKgD,GAAG,EAAErC,KAAM;QAACsC,MAAM,EAAC,OAAO;QAACC,KAAK,EAAC,OAAO;QAACC,GAAG,EAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvD5C,OAAA;QAAAwC,QAAA,GAAK,QAAM,EAACrB,OAAO,EAAC,GAAC;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC3B5C,OAAA;QAAAwC,QAAA,GAAK,YAAU,EAAChC,IAAI,CAAC,CAAC,CAAC,CAAC4C,QAAQ,EAAC,IAAE;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzC5C,OAAA;QAAAwC,QAAA,GAAK,QAAM,EAAChC,IAAI,CAAC,CAAC,CAAC,CAAC6C,IAAI,EAAC,WAAS;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAExC5C,OAAA;QAAAwC,QAAA,eACCxC,OAAA;UAAQsD,OAAO,EAAEhC,aAAc;UAAAkB,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA,gBACJ,gBAEH5C,OAAA,CAAAE,SAAA;IAAAsC,QAAA,gBACCxC,OAAA,CAACF,oBAAoB;MACpB0B,cAAc,EAAEA,cAAe;MAC/BhB,IAAI,EAAEK;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB,eACF5C,OAAA;MAAK6C,SAAS,EAAC,cAAc;MAAAL,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA,gBAE5C;AACF,CAAC;AAACrC,EAAA,CAtGID,WAAW;EAAA,QACUT,WAAW;AAAA;AAAA0D,EAAA,GADhCjD,WAAW;AAwGjB,eAAeA,WAAW;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}