{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Greenwich\\\\JsApp\\\\CreateReactApp\\\\weatherapp\\\\src\\\\components\\\\palindrom_checker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport InputField from \"./inputField_component\";\nimport ButtonHeader from \"./button_header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PalindromChecker = () => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [isPalindrome, setIsPalindrome] = useState(false);\n  const handleTextChange = e => {\n    const {\n      value\n    } = e.target;\n    setWord(value);\n  };\n  const checkIsPalindrom = e => {\n    e.preventDefault();\n    //const reg = /[\\W_]/g;\n    //console.log(\"check for number :\", typeof word);\n    const reversed = word.split(\"\").reverse().join(\"\");\n    if (reversed === word) {\n      setIsPalindrome(true);\n      console.log(\"true\");\n    } else {\n      setIsPalindrome(false);\n      console.log(\"false\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          placeholder: \"Type a word\",\n          handleChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-box\",\n        children: /*#__PURE__*/_jsxDEV(ButtonHeader, {\n          btnName: \"Check word\",\n          handleClick: checkIsPalindrom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), isPalindrome === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palindrome\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [word, \" is a palidrome\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palindrome\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [word, \" is not a palidrome\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(PalindromChecker, \"INdRBB5tq1Tb0nRuhLueM71+l3k=\");\n_c = PalindromChecker;\nexport default PalindromChecker;\nvar _c;\n$RefreshReg$(_c, \"PalindromChecker\");","map":{"version":3,"names":["React","useState","InputField","ButtonHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","PalindromChecker","_s","word","setWord","isPalindrome","setIsPalindrome","handleTextChange","e","value","target","checkIsPalindrom","preventDefault","reversed","split","reverse","join","console","log","children","className","placeholder","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","btnName","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/Greenwich/JsApp/CreateReactApp/weatherapp/src/components/palindrom_checker.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport InputField from \"./inputField_component\";\r\nimport ButtonHeader from \"./button_header\";\r\n\r\nconst PalindromChecker = () => {\r\n\tconst [word, setWord] = useState<string>(\"\");\r\n\tconst [isPalindrome, setIsPalindrome] = useState<boolean>(false);\r\n\tconst handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { value } = e.target as unknown as { value: string };\r\n\t\tsetWord(value);\r\n\t};\r\n\tconst checkIsPalindrom = (e: MouseEvent) => {\r\n\t\te.preventDefault();\r\n\t\t//const reg = /[\\W_]/g;\r\n\t\t//console.log(\"check for number :\", typeof word);\r\n\t\tconst reversed = word.split(\"\").reverse().join(\"\");\r\n\t\tif (reversed === word) {\r\n\t\t\tsetIsPalindrome(true);\r\n\t\t\tconsole.log(\"true\");\r\n\t\t} else {\r\n\t\t\tsetIsPalindrome(false);\r\n\t\t\tconsole.log(\"false\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<div className=\"search-box\">\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tplaceholder=\"Type a word\"\r\n\t\t\t\t\t\thandleChange={handleTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"btn-box\">\r\n\t\t\t\t\t<ButtonHeader btnName=\"Check word\" handleClick={checkIsPalindrom} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{isPalindrome === true ? (\r\n\t\t\t\t<div className=\"palindrome\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<p>{word} is a palidrome</p>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"palindrome\">\r\n\t\t\t\t\t<p>{word} is not a palidrome</p>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PalindromChecker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}