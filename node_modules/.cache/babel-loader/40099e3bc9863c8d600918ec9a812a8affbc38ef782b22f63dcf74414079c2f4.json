{"ast":null,"code":"import { put, takeEvery } from \"redux-saga/effects\";\nimport { SEARCH_WEATHER_DATA } from \"../actions_type\";\nfunction* getWeather() {\n  let data = yield fetch(\"http://localhost:3500/products\");\n  data = yield data.json();\n  console.warn(\"action PRODUCT_LIST_CALLED called\", data);\n  yield put({\n    type: SEARCH_WEATHER_DATA,\n    data\n  });\n}\nfunction* searchProducts(data) {\n  let result = yield fetch(`https://api.openweathermap.org/data/2.5/weather?q=${data.query}&appid=b5aad4fab443b8fc561cd84cbc232cc9`);\n  result = yield result.json();\n  console.warn(\"action PRODUCT_LIST_CALLED called\", result);\n  yield put({\n    type: SEARCH_WEATHER_DATA,\n    data: result\n  });\n}\nfunction* productSaga() {\n  yield takeEvery(SEARCH_WEATHER_DATA, searchProducts);\n}\nexport default productSaga;","map":{"version":3,"names":["put","takeEvery","SEARCH_WEATHER_DATA","getWeather","data","fetch","json","console","warn","type","searchProducts","result","query","productSaga"],"sources":["C:/Users/Greenwich/JsApp/CreateReactApp/weatherapp/src/redux/searchWeather/weatherSaga.ts"],"sourcesContent":["import { put, call, takeEvery, all, fork } from \"redux-saga/effects\";\r\nimport {\r\n\tGET_WEATHER_DATA,\r\n\tSEARCH_WEATHER_DATA,\r\n\tSET_WEATHER_DATA,\r\n} from \"../actions_type\";\r\n\r\nfunction* getWeather(): any {\r\n\tlet data = yield fetch(\"http://localhost:3500/products\");\r\n\tdata = yield data.json();\r\n\tconsole.warn(\"action PRODUCT_LIST_CALLED called\", data);\r\n\tyield put({ type: SEARCH_WEATHER_DATA, data });\r\n}\r\n\r\nfunction* searchProducts(data: any): any {\r\n\tlet result = yield fetch(\r\n\t\t`https://api.openweathermap.org/data/2.5/weather?q=${data.query}&appid=b5aad4fab443b8fc561cd84cbc232cc9`\r\n\t);\r\n\tresult = yield result.json();\r\n\tconsole.warn(\"action PRODUCT_LIST_CALLED called\", result);\r\n\tyield put({ type: SEARCH_WEATHER_DATA, data: result });\r\n}\r\n\r\nfunction* productSaga() {\r\n\tyield takeEvery(SEARCH_WEATHER_DATA, searchProducts);\r\n}\r\nexport default productSaga;\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAQC,SAAS,QAAmB,oBAAoB;AACpE,SAECC,mBAAmB,QAEb,iBAAiB;AAExB,UAAUC,UAAUA,CAAA,EAAQ;EAC3B,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;EACxDD,IAAI,GAAG,MAAMA,IAAI,CAACE,IAAI,EAAE;EACxBC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEJ,IAAI,CAAC;EACvD,MAAMJ,GAAG,CAAC;IAAES,IAAI,EAAEP,mBAAmB;IAAEE;EAAK,CAAC,CAAC;AAC/C;AAEA,UAAUM,cAAcA,CAACN,IAAS,EAAO;EACxC,IAAIO,MAAM,GAAG,MAAMN,KAAK,CACtB,qDAAoDD,IAAI,CAACQ,KAAM,yCAAwC,CACxG;EACDD,MAAM,GAAG,MAAMA,MAAM,CAACL,IAAI,EAAE;EAC5BC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEG,MAAM,CAAC;EACzD,MAAMX,GAAG,CAAC;IAAES,IAAI,EAAEP,mBAAmB;IAAEE,IAAI,EAAEO;EAAO,CAAC,CAAC;AACvD;AAEA,UAAUE,WAAWA,CAAA,EAAG;EACvB,MAAMZ,SAAS,CAACC,mBAAmB,EAAEQ,cAAc,CAAC;AACrD;AACA,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}