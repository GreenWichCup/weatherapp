{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Greenwich\\\\JsApp\\\\CreateReactApp\\\\weatherapp\\\\src\\\\components\\\\palindrom_checker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport InputField from \"./inputField_component\";\nimport ButtonHeader from \"./button_header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PalindromChecker = () => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [isPalindrome, setIsPalindrom] = useState(false);\n  const handleTextChange = e => {\n    const {\n      value\n    } = e.target;\n    setWord(value);\n  };\n  const checkIsPalindrom = e => {\n    e.preventDefault();\n    //const reg = /[\\W_]/g;\n    //console.log(\"check for number :\", typeof word);\n    const reversed = word.split(\"\").reverse().join();\n    if (reversed === word) {\n      setIsPalindrom(true);\n    } else {\n      setIsPalindrom(false);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [word, \" is \", isPalindrome ? \" a palindrome\" : \" not a palidrome\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        placeholder: \"Type a word\",\n        handleChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-box\",\n      children: /*#__PURE__*/_jsxDEV(ButtonHeader, {\n        btnName: \"Check word\",\n        handleClick: checkIsPalindrom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n_s(PalindromChecker, \"yWONVJvasdgoSt5Jf59OlZ4JgTc=\");\n_c = PalindromChecker;\nexport default PalindromChecker;\nvar _c;\n$RefreshReg$(_c, \"PalindromChecker\");","map":{"version":3,"names":["React","useState","InputField","ButtonHeader","jsxDEV","_jsxDEV","PalindromChecker","_s","word","setWord","isPalindrome","setIsPalindrom","handleTextChange","e","value","target","checkIsPalindrom","preventDefault","reversed","split","reverse","join","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","handleChange","btnName","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/Greenwich/JsApp/CreateReactApp/weatherapp/src/components/palindrom_checker.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport InputField from \"./inputField_component\";\r\nimport ButtonHeader from \"./button_header\";\r\n\r\nconst PalindromChecker = () => {\r\n\tconst [word, setWord] = useState<string>(\"\");\r\n\tconst [isPalindrome, setIsPalindrom] = useState<boolean>(false);\r\n\tconst handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { value } = e.target as unknown as { value: string };\r\n\t\tsetWord(value);\r\n\t};\r\n\tconst checkIsPalindrom = (e: MouseEvent) => {\r\n\t\te.preventDefault();\r\n\t\t//const reg = /[\\W_]/g;\r\n\t\t//console.log(\"check for number :\", typeof word);\r\n\t\tconst reversed = word.split(\"\").reverse().join();\r\n\t\tif (reversed === word) {\r\n\t\t\tsetIsPalindrom(true);\r\n\t\t} else {\r\n\t\t\tsetIsPalindrom(false);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{word} is {isPalindrome ? \" a palindrome\" : \" not a palidrome\"}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<div className=\"search-box\">\r\n\t\t\t\t<InputField placeholder=\"Type a word\" handleChange={handleTextChange} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"btn-box\">\r\n\t\t\t\t<ButtonHeader btnName=\"Check word\" handleClick={checkIsPalindrom} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PalindromChecker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAC/D,MAAMW,gBAAgB,GAAIC,CAAsC,IAAK;IACpE,MAAM;MAAEC;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAsC;IAC1DN,OAAO,CAACK,KAAK,CAAC;EACf,CAAC;EACD,MAAME,gBAAgB,GAAIH,CAAa,IAAK;IAC3CA,CAAC,CAACI,cAAc,EAAE;IAClB;IACA;IACA,MAAMC,QAAQ,GAAGV,IAAI,CAACW,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,EAAE,CAACC,IAAI,EAAE;IAChD,IAAIH,QAAQ,KAAKV,IAAI,EAAE;MACtBG,cAAc,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACNA,cAAc,CAAC,KAAK,CAAC;IACtB;IACA,oBACCN,OAAA;MAAAiB,QAAA,eACCjB,OAAA;QAAAiB,QAAA,GACEd,IAAI,EAAC,MAAI,EAACE,YAAY,GAAG,eAAe,GAAG,kBAAkB;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC3D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAER,CAAC;EACD,oBACCrB,OAAA;IAAKsB,SAAS,EAAC,QAAQ;IAAAL,QAAA,gBACtBjB,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAL,QAAA,eAC1BjB,OAAA,CAACH,UAAU;QAAC0B,WAAW,EAAC,aAAa;QAACC,YAAY,EAAEjB;MAAiB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnE,eACNrB,OAAA;MAAKsB,SAAS,EAAC,SAAS;MAAAL,QAAA,eACvBjB,OAAA,CAACF,YAAY;QAAC2B,OAAO,EAAC,YAAY;QAACC,WAAW,EAAEf;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAER,CAAC;AAACnB,EAAA,CAnCID,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AAqCtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}