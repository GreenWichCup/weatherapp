{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Greenwich\\\\JsApp\\\\CreateReactApp\\\\weatherapp\\\\src\\\\components\\\\palindrom_checker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport InputField from \"./inputField_component\";\nimport ButtonHeader from \"./button_header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PalindromChecker = () => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [isPalindrome, setIsPalindrome] = useState(false);\n  const [visible, setIsVisible] = useState(false);\n  const handleTextChange = e => {\n    const {\n      value\n    } = e.target;\n    setWord(value);\n  };\n  const checkIsPalindrom = e => {\n    e.preventDefault();\n    setIsVisible(true);\n    //const reg = /[\\W_]/g;\n    //console.log(\"check for number :\", typeof word);\n    const reversed = word.toLowerCase().split(\"\").reverse().join(\"\");\n    if (reversed === word) {\n      setIsPalindrome(true);\n      console.log(\"true\");\n    } else {\n      setIsPalindrome(false);\n      console.log(\"false\");\n    }\n  };\n  const Result = () => {\n    return word.length && visible === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palindrome\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [word, \" is \", isPalindrome === true ? \" a \" : \" not a \", \"palidrome\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palindrome\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [word, \" is not a palidrome\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          placeholder: \"Type a word\",\n          handleChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-box\",\n        children: /*#__PURE__*/_jsxDEV(ButtonHeader, {\n          btnName: \"Check word\",\n          handleClick: checkIsPalindrom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(PalindromChecker, \"M3U0fsiW+iWFgM5BJqeP+kKj7G0=\");\n_c = PalindromChecker;\nexport default PalindromChecker;\nvar _c;\n$RefreshReg$(_c, \"PalindromChecker\");","map":{"version":3,"names":["React","useState","InputField","ButtonHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","PalindromChecker","_s","word","setWord","isPalindrome","setIsPalindrome","visible","setIsVisible","handleTextChange","e","value","target","checkIsPalindrom","preventDefault","reversed","toLowerCase","split","reverse","join","console","log","Result","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","handleChange","btnName","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/Greenwich/JsApp/CreateReactApp/weatherapp/src/components/palindrom_checker.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport InputField from \"./inputField_component\";\r\nimport ButtonHeader from \"./button_header\";\r\nimport { isVisible } from \"@testing-library/user-event/dist/utils\";\r\n\r\nconst PalindromChecker = () => {\r\n\tconst [word, setWord] = useState<string>(\"\");\r\n\tconst [isPalindrome, setIsPalindrome] = useState<boolean>(false);\r\n\tconst [visible, setIsVisible] = useState<boolean>(false);\r\n\tconst handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { value } = e.target as unknown as { value: string };\r\n\t\tsetWord(value);\r\n\t};\r\n\tconst checkIsPalindrom = (e: MouseEvent) => {\r\n\t\te.preventDefault();\r\n\t\tsetIsVisible(true);\r\n\t\t//const reg = /[\\W_]/g;\r\n\t\t//console.log(\"check for number :\", typeof word);\r\n\t\tconst reversed = word.toLowerCase().split(\"\").reverse().join(\"\");\r\n\t\tif (reversed === word) {\r\n\t\t\tsetIsPalindrome(true);\r\n\t\t\tconsole.log(\"true\");\r\n\t\t} else {\r\n\t\t\tsetIsPalindrome(false);\r\n\t\t\tconsole.log(\"false\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst Result = () => {\r\n\t\treturn word.length && visible === true ? (\r\n\t\t\t<div className=\"palindrome\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{word} is {isPalindrome === true ? \" a \" : \" not a \"}palidrome\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div className=\"palindrome\">\r\n\t\t\t\t<p>{word} is not a palidrome</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<div className=\"search-box\">\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tplaceholder=\"Type a word\"\r\n\t\t\t\t\t\thandleChange={handleTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"btn-box\">\r\n\t\t\t\t\t<ButtonHeader btnName=\"Check word\" handleClick={checkIsPalindrom} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Result />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PalindromChecker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}