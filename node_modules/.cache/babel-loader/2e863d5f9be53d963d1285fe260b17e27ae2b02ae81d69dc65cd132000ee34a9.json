{"ast":null,"code":"import { put, takeEvery } from \"redux-saga/effects\";\nimport { SEARCH_WEATHER_DATA, SET_WEATHER_DATA } from \"../actions_type\";\nfunction* searchProducts(data) {\n  let result = yield fetch(`https://api.openweathermap.org/data/2.5/weather?q=${data.query}&appid=b5aad4fab443b8fc561cd84cbc232cc9`);\n  result = yield result.json();\n  const formattedResult = yield {\n    id: result.id,\n    name: result.name,\n    weather: result.weather[0].main,\n    temp: result.main.temp,\n    country: result.sys.country,\n    humidity: result.main.humidity,\n    wind: result.wind.speed\n  };\n  console.warn(\"action search weather called\", formattedResult);\n  yield put({\n    type: SET_WEATHER_DATA,\n    data: formattedResult\n  });\n}\nfunction* weatherSaga() {\n  yield takeEvery(SEARCH_WEATHER_DATA, searchProducts);\n}\nexport default weatherSaga;","map":{"version":3,"names":["put","takeEvery","SEARCH_WEATHER_DATA","SET_WEATHER_DATA","searchProducts","data","result","fetch","query","json","formattedResult","id","name","weather","main","temp","country","sys","humidity","wind","speed","console","warn","type","weatherSaga"],"sources":["C:/Users/Greenwich/JsApp/CreateReactApp/weatherapp/src/redux/searchWeather/weatherSaga.ts"],"sourcesContent":["import { readSync } from \"fs\";\r\nimport { put, takeEvery } from \"redux-saga/effects\";\r\nimport { WeatherData } from \"../actions_type\";\r\nimport {\r\n\tGET_WEATHER_DATA,\r\n\tSEARCH_WEATHER_DATA,\r\n\tSET_WEATHER_DATA,\r\n} from \"../actions_type\";\r\n\r\nfunction* searchProducts(data: any): any {\r\n\tlet result = yield fetch(\r\n\t\t`https://api.openweathermap.org/data/2.5/weather?q=${data.query}&appid=b5aad4fab443b8fc561cd84cbc232cc9`\r\n\t);\r\n\tresult = yield result.json();\r\n\tconst formattedResult = yield {\r\n\t\tid: result.id,\r\n\t\tname: result.name,\r\n\t\tweather: result.weather[0].main,\r\n\t\ttemp: result.main.temp,\r\n\t\tcountry: result.sys.country,\r\n\t\thumidity: result.main.humidity,\r\n\t\twind: result.wind.speed,\r\n\t};\r\n\tconsole.warn(\"action search weather called\", formattedResult);\r\n\tyield put({ type: SET_WEATHER_DATA, data: formattedResult });\r\n}\r\n\r\nfunction* weatherSaga() {\r\n\tyield takeEvery(SEARCH_WEATHER_DATA, searchProducts);\r\n}\r\nexport default weatherSaga;\r\n"],"mappings":"AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AAEnD,SAECC,mBAAmB,EACnBC,gBAAgB,QACV,iBAAiB;AAExB,UAAUC,cAAcA,CAACC,IAAS,EAAO;EACxC,IAAIC,MAAM,GAAG,MAAMC,KAAK,CACtB,qDAAoDF,IAAI,CAACG,KAAM,yCAAwC,CACxG;EACDF,MAAM,GAAG,MAAMA,MAAM,CAACG,IAAI,EAAE;EAC5B,MAAMC,eAAe,GAAG,MAAM;IAC7BC,EAAE,EAAEL,MAAM,CAACK,EAAE;IACbC,IAAI,EAAEN,MAAM,CAACM,IAAI;IACjBC,OAAO,EAAEP,MAAM,CAACO,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;IAC/BC,IAAI,EAAET,MAAM,CAACQ,IAAI,CAACC,IAAI;IACtBC,OAAO,EAAEV,MAAM,CAACW,GAAG,CAACD,OAAO;IAC3BE,QAAQ,EAAEZ,MAAM,CAACQ,IAAI,CAACI,QAAQ;IAC9BC,IAAI,EAAEb,MAAM,CAACa,IAAI,CAACC;EACnB,CAAC;EACDC,OAAO,CAACC,IAAI,CAAC,8BAA8B,EAAEZ,eAAe,CAAC;EAC7D,MAAMV,GAAG,CAAC;IAAEuB,IAAI,EAAEpB,gBAAgB;IAAEE,IAAI,EAAEK;EAAgB,CAAC,CAAC;AAC7D;AAEA,UAAUc,WAAWA,CAAA,EAAG;EACvB,MAAMvB,SAAS,CAACC,mBAAmB,EAAEE,cAAc,CAAC;AACrD;AACA,eAAeoB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}