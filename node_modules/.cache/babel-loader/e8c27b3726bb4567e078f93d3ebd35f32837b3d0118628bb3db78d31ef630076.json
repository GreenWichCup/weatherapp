{"ast":null,"code":"import * as actions from \"../actions_type\";\nconst getErrorMatches = actionType => /(.*)_(REQUEST|FAILURE|CLEAR_ERRORS)/.exec(actionType);\nexport const errorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const matches = getErrorMatches(action.type);\n  if (!matches) {\n    return state;\n  }\n  const [, requestName, requestStatus] = matches;\n  return {\n    ...state,\n    [requestName]: requestStatus === \"FAILURE\" ? action.error : null\n  };\n};\nconst getLoadingMatches = actionType => /(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(actionType);\nexport const isLoadingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const matches = getLoadingMatches(action.type);\n  if (!matches) {\n    return state;\n  }\n  const [, requestName, requestStatus] = matches;\n  return {\n    ...state,\n    [requestName]: requestStatus === \"REQUEST\"\n  };\n};\nconst initialState = {\n  data: {\n    id: 0,\n    weather: \"thunderstorm\",\n    temp: 25,\n    humidity: 50,\n    country: \"CA\",\n    wind: 13\n  }\n};\nexport function weatherReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actions.SET_WEATHER_DATA:\n    case actions.GET_WEATHER_SUCCESS:\n      return {\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["actions","getErrorMatches","actionType","exec","errorReducer","state","arguments","length","undefined","action","matches","type","requestName","requestStatus","error","getLoadingMatches","isLoadingReducer","initialState","data","id","weather","temp","humidity","country","wind","weatherReducer","SET_WEATHER_DATA","GET_WEATHER_SUCCESS","payload"],"sources":["C:/Users/Greenwich/JsApp/CreateReactApp/weatherapp/src/redux/searchWeather/weatherReducer.ts"],"sourcesContent":["import { WeatherData } from \"./../actions_type\";\r\nimport * as actions from \"../actions_type\";\r\nimport { Action } from \"redux\";\r\n\r\ninterface ErrorAction {\r\n\ttype: string;\r\n\terror: Error | string;\r\n}\r\n\r\nexport interface ErrorState {\r\n\t[key: string]: null | Error | string;\r\n}\r\n\r\nconst getErrorMatches = (actionType: string) =>\r\n\t/(.*)_(REQUEST|FAILURE|CLEAR_ERRORS)/.exec(actionType);\r\n\r\nexport const errorReducer = (state: ErrorState = {}, action: ErrorAction) => {\r\n\tconst matches = getErrorMatches(action.type);\r\n\tif (!matches) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\tconst [, requestName, requestStatus] = matches;\r\n\treturn {\r\n\t\t...state,\r\n\t\t[requestName]: requestStatus === \"FAILURE\" ? action.error : null,\r\n\t};\r\n};\r\n\r\nexport interface IsLoadingState {\r\n\t[key: string]: boolean;\r\n}\r\n\r\nconst getLoadingMatches = (actionType: string) =>\r\n\t/(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(actionType);\r\n\r\nexport const isLoadingReducer = (\r\n\tstate: IsLoadingState = {},\r\n\taction: Action\r\n) => {\r\n\tconst matches = getLoadingMatches(action.type);\r\n\r\n\tif (!matches) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\tconst [, requestName, requestStatus] = matches;\r\n\treturn {\r\n\t\t...state,\r\n\t\t[requestName]: requestStatus === \"REQUEST\",\r\n\t};\r\n};\r\n\r\nexport interface WeatherState {\r\n\tdata: WeatherData;\r\n}\r\n\r\nconst initialState: WeatherState = {\r\n\tdata: {\r\n\t\tid: 0,\r\n\t\tweather: \"thunderstorm\",\r\n\t\ttemp: 25,\r\n\t\thumidity: 50,\r\n\t\tcountry: \"CA\",\r\n\t\twind: 13,\r\n\t},\r\n};\r\n\r\nexport function weatherReducer(\r\n\tstate: WeatherState = initialState,\r\n\taction: actions.WeatherActions\r\n): WeatherState {\r\n\tswitch (action.type) {\r\n\t\tcase actions.SET_WEATHER_DATA:\r\n\t\tcase actions.GET_WEATHER_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n"],"mappings":"AACA,OAAO,KAAKA,OAAO,MAAM,iBAAiB;AAY1C,MAAMC,eAAe,GAAIC,UAAkB,IAC1C,qCAAqC,CAACC,IAAI,CAACD,UAAU,CAAC;AAEvD,OAAO,MAAME,YAAY,GAAG,SAAAA,CAAA,EAAiD;EAAA,IAAhDC,KAAiB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvE,MAAME,OAAO,GAAGT,eAAe,CAACQ,MAAM,CAACE,IAAI,CAAC;EAC5C,IAAI,CAACD,OAAO,EAAE;IACb,OAAOL,KAAK;EACb;EAEA,MAAM,GAAGO,WAAW,EAAEC,aAAa,CAAC,GAAGH,OAAO;EAC9C,OAAO;IACN,GAAGL,KAAK;IACR,CAACO,WAAW,GAAGC,aAAa,KAAK,SAAS,GAAGJ,MAAM,CAACK,KAAK,GAAG;EAC7D,CAAC;AACF,CAAC;AAMD,MAAMC,iBAAiB,GAAIb,UAAkB,IAC5C,gCAAgC,CAACC,IAAI,CAACD,UAAU,CAAC;AAElD,OAAO,MAAMc,gBAAgB,GAAG,SAAAA,CAAA,EAG3B;EAAA,IAFJX,KAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAC1BG,MAAc,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEd,MAAME,OAAO,GAAGK,iBAAiB,CAACN,MAAM,CAACE,IAAI,CAAC;EAE9C,IAAI,CAACD,OAAO,EAAE;IACb,OAAOL,KAAK;EACb;EAEA,MAAM,GAAGO,WAAW,EAAEC,aAAa,CAAC,GAAGH,OAAO;EAC9C,OAAO;IACN,GAAGL,KAAK;IACR,CAACO,WAAW,GAAGC,aAAa,KAAK;EAClC,CAAC;AACF,CAAC;AAMD,MAAMI,YAA0B,GAAG;EAClCC,IAAI,EAAE;IACLC,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE,cAAc;IACvBC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,IAAI;IACbC,IAAI,EAAE;EACP;AACD,CAAC;AAED,OAAO,SAASC,cAAcA,CAAA,EAGd;EAAA,IAFfpB,KAAmB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGW,YAAY;EAAA,IAClCR,MAA8B,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAE9B,QAAQC,MAAM,CAACE,IAAI;IAClB,KAAKX,OAAO,CAAC0B,gBAAgB;IAC7B,KAAK1B,OAAO,CAAC2B,mBAAmB;MAC/B,OAAO;QACNT,IAAI,EAAET,MAAM,CAACmB;MACd,CAAC;IACF;MACC,OAAOvB,KAAK;EAAC;AAEhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}