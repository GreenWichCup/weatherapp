{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Greenwich\\\\JsApp\\\\CreateReactApp\\\\weatherapp\\\\src\\\\components\\\\weatherCard_component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.css\";\nimport FavoritesWeatherList from \"./favorites_list.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherCard = () => {\n  _s();\n  let data = useSelector(state => state.weatherReducer);\n  const [photo, setPhoto] = useState(\"\");\n  const [favoriteList, setFavoriteList] = useState([]);\n  const [isToggled, setIsToggled] = useState(false);\n  const fahrenheit = data[0].temp * 1.8 - 459.67;\n  const celsius = Math.floor(data[0].temp - 273.15);\n  const addToFavorite = async () => {\n    if (!favoriteList.includes(data[0])) {\n      setFavoriteList([...favoriteList, data[0]]);\n    }\n  };\n  const removeFavorite = item => {\n    console.log(\"item id click in Application:\", item);\n    //const newList = favoriteList.filter((fav) => fav.id !== data[0].id);\n    //console.log(\"filtered function :\", newList);\n    //setFavoriteList([...newList]);\n  };\n  // TODO : refactor code => transfer function somewhereElse\n  const weatherImg = useCallback(() => {\n    let value;\n    switch (data[0].weather.toLowerCase()) {\n      case \"rain\":\n      case \"thunderstorm\":\n      case \"drizzle\":\n        value = require(\"../assets/rainy.png\");\n        break;\n      case \"clouds\":\n      case \"smoke\":\n      case \"fog\":\n      case \"haze\":\n      case \"dust\":\n      case \"sand\":\n      case \"mist\":\n        value = require(\"../assets/cloud.png\");\n        break;\n      case \"clear\":\n        value = require(\"../assets/sunny.png\");\n        break;\n      case \"snow\":\n        value = require(\"../assets/snowflake.png\");\n        break;\n      default:\n        break;\n    }\n    setPhoto(value);\n  }, [data]);\n  useEffect(() => {\n    if (data) {\n      weatherImg();\n    } else {\n      console.log(\"noData\");\n    }\n  }, [data, weatherImg]);\n\n  //Adding favoriteList as dependecy will trigger loop component rendering\n  useEffect(() => {\n    if (storedFavorites) {\n      setFavoriteList(JSON.parse(storedFavorites));\n      console.log(\"storedFavorites :\", JSON.parse(storedFavorites));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"favoritesWeather\", JSON.stringify(favoriteList));\n    console.log(\"favoriteList updated, \", favoriteList);\n  }, [favoriteList]);\n  return data[0].id !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-container\",\n      children: [data[0].name, \", \", data[0].country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: photo,\n      height: \"100px\",\n      width: \"100px\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"temp: \", celsius, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"humidity: \", data[0].humidity, \"% \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"wind: \", data[0].wind, \" miles/h \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToFavorite,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FavoritesWeatherList, {\n      data: favoriteList,\n      removeFavorite: removeFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FavoritesWeatherList, {\n      data: favoriteList,\n      removeFavorite: removeFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-item\",\n      children: \"NO DATA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(WeatherCard, \"oVT+ICEHtFIiaC7vaTrpVQDXy/o=\", false, function () {\n  return [useSelector];\n});\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useSelector","FavoritesWeatherList","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherCard","_s","data","state","weatherReducer","photo","setPhoto","favoriteList","setFavoriteList","isToggled","setIsToggled","fahrenheit","temp","celsius","Math","floor","addToFavorite","includes","removeFavorite","item","console","log","weatherImg","value","weather","toLowerCase","require","storedFavorites","JSON","parse","localStorage","setItem","stringify","id","className","children","name","country","fileName","_jsxFileName","lineNumber","columnNumber","src","height","width","alt","humidity","wind","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Greenwich/JsApp/CreateReactApp/weatherapp/src/components/weatherCard_component.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../redux/root-reducer\";\r\nimport \"../App.css\";\r\nimport { WeatherData } from \"../redux/actions_type\";\r\nimport FavoritesWeatherList from \"./favorites_list.component\";\r\n\r\nconst WeatherCard = () => {\r\n\tlet data: WeatherData[] = useSelector(\r\n\t\t(state: RootState) => state.weatherReducer\r\n\t);\r\n\tconst [photo, setPhoto] = useState<string>(\"\");\r\n\tconst [favoriteList, setFavoriteList] = useState<WeatherData[]>([]);\r\n\tconst [isToggled, setIsToggled] = useState<boolean>(false);\r\n\tconst fahrenheit: number = data[0].temp * 1.8 - 459.67;\r\n\tconst celsius: number = Math.floor(data[0].temp - 273.15);\r\n\r\n\tconst addToFavorite = async () => {\r\n\t\tif (!favoriteList.includes(data[0])) {\r\n\t\t\tsetFavoriteList([...favoriteList, data[0]]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst removeFavorite = (item: any) => {\r\n\t\tconsole.log(\"item id click in Application:\", item);\r\n\t\t//const newList = favoriteList.filter((fav) => fav.id !== data[0].id);\r\n\t\t//console.log(\"filtered function :\", newList);\r\n\t\t//setFavoriteList([...newList]);\r\n\t};\r\n\t// TODO : refactor code => transfer function somewhereElse\r\n\tconst weatherImg = useCallback(() => {\r\n\t\tlet value;\r\n\t\tswitch (data[0].weather.toLowerCase()) {\r\n\t\t\tcase \"rain\":\r\n\t\t\tcase \"thunderstorm\":\r\n\t\t\tcase \"drizzle\":\r\n\t\t\t\tvalue = require(\"../assets/rainy.png\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"clouds\":\r\n\t\t\tcase \"smoke\":\r\n\t\t\tcase \"fog\":\r\n\t\t\tcase \"haze\":\r\n\t\t\tcase \"dust\":\r\n\t\t\tcase \"sand\":\r\n\t\t\tcase \"mist\":\r\n\t\t\t\tvalue = require(\"../assets/cloud.png\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"clear\":\r\n\t\t\t\tvalue = require(\"../assets/sunny.png\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"snow\":\r\n\t\t\t\tvalue = require(\"../assets/snowflake.png\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tsetPhoto(value);\r\n\t}, [data]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tweatherImg();\r\n\t\t} else {\r\n\t\t\tconsole.log(\"noData\");\r\n\t\t}\r\n\t}, [data, weatherImg]);\r\n\r\n\t//Adding favoriteList as dependecy will trigger loop component rendering\r\n\tuseEffect(() => {\r\n\t\tif (storedFavorites) {\r\n\t\t\tsetFavoriteList(JSON.parse(storedFavorites));\r\n\t\t\tconsole.log(\"storedFavorites :\", JSON.parse(storedFavorites));\r\n\t\t}\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"favoritesWeather\", JSON.stringify(favoriteList));\r\n\t\tconsole.log(\"favoriteList updated, \", favoriteList);\r\n\t}, [favoriteList]);\r\n\r\n\treturn data[0].id !== 0 ? (\r\n\t\t<div className=\"product-item\">\r\n\t\t\t<div className=\"product-container\">\r\n\t\t\t\t{data[0].name}, {data[0].country}\r\n\t\t\t</div>\r\n\t\t\t<img src={photo} height=\"100px\" width=\"100px\" alt=\"\" />\r\n\t\t\t<div>temp: {celsius} </div>\r\n\t\t\t<div>humidity: {data[0].humidity}% </div>\r\n\t\t\t<div>wind: {data[0].wind} miles/h </div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={addToFavorite}>Add to Cart</button>\r\n\t\t\t</div>\r\n\t\t\t<FavoritesWeatherList\r\n\t\t\t\tdata={favoriteList}\r\n\t\t\t\tremoveFavorite={removeFavorite}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<FavoritesWeatherList\r\n\t\t\t\tdata={favoriteList}\r\n\t\t\t\tremoveFavorite={removeFavorite}\r\n\t\t\t/>\r\n\t\t\t<div className=\"product-item\">NO DATA</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WeatherCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAqB,aAAa;AAEtD,OAAO,YAAY;AAEnB,OAAOC,oBAAoB,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,IAAIC,IAAmB,GAAGR,WAAW,CACnCS,KAAgB,IAAKA,KAAK,CAACC,cAAc,CAC1C;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAgB,EAAE,CAAC;EACnE,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAU,KAAK,CAAC;EAC1D,MAAMoB,UAAkB,GAAGT,IAAI,CAAC,CAAC,CAAC,CAACU,IAAI,GAAG,GAAG,GAAG,MAAM;EACtD,MAAMC,OAAe,GAAGC,IAAI,CAACC,KAAK,CAACb,IAAI,CAAC,CAAC,CAAC,CAACU,IAAI,GAAG,MAAM,CAAC;EAEzD,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACT,YAAY,CAACU,QAAQ,CAACf,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MACpCM,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEL,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C;EACD,CAAC;EAED,MAAMgB,cAAc,GAAIC,IAAS,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,IAAI,CAAC;IAClD;IACA;IACA;EACD,CAAC;EACD;EACA,MAAMG,UAAU,GAAG7B,WAAW,CAAC,MAAM;IACpC,IAAI8B,KAAK;IACT,QAAQrB,IAAI,CAAC,CAAC,CAAC,CAACsB,OAAO,CAACC,WAAW,EAAE;MACpC,KAAK,MAAM;MACX,KAAK,cAAc;MACnB,KAAK,SAAS;QACbF,KAAK,GAAGG,OAAO,CAAC,qBAAqB,CAAC;QACtC;MACD,KAAK,QAAQ;MACb,KAAK,OAAO;MACZ,KAAK,KAAK;MACV,KAAK,MAAM;MACX,KAAK,MAAM;MACX,KAAK,MAAM;MACX,KAAK,MAAM;QACVH,KAAK,GAAGG,OAAO,CAAC,qBAAqB,CAAC;QACtC;MACD,KAAK,OAAO;QACXH,KAAK,GAAGG,OAAO,CAAC,qBAAqB,CAAC;QACtC;MACD,KAAK,MAAM;QACVH,KAAK,GAAGG,OAAO,CAAC,yBAAyB,CAAC;QAC1C;MACD;QACC;IAAM;IAERpB,QAAQ,CAACiB,KAAK,CAAC;EAChB,CAAC,EAAE,CAACrB,IAAI,CAAC,CAAC;EAEVV,SAAS,CAAC,MAAM;IACf,IAAIU,IAAI,EAAE;MACToB,UAAU,EAAE;IACb,CAAC,MAAM;MACNF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACtB;EACD,CAAC,EAAE,CAACnB,IAAI,EAAEoB,UAAU,CAAC,CAAC;;EAEtB;EACA9B,SAAS,CAAC,MAAM;IACf,IAAImC,eAAe,EAAE;MACpBnB,eAAe,CAACoB,IAAI,CAACC,KAAK,CAACF,eAAe,CAAC,CAAC;MAC5CP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEO,IAAI,CAACC,KAAK,CAACF,eAAe,CAAC,CAAC;IAC9D;EACD,CAAC,EAAE,EAAE,CAAC;EACNnC,SAAS,CAAC,MAAM;IACfsC,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEH,IAAI,CAACI,SAAS,CAACzB,YAAY,CAAC,CAAC;IACtEa,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEd,YAAY,CAAC;EACpD,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,OAAOL,IAAI,CAAC,CAAC,CAAC,CAAC+B,EAAE,KAAK,CAAC,gBACtBpC,OAAA;IAAKqC,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC5BtC,OAAA;MAAKqC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAChCjC,IAAI,CAAC,CAAC,CAAC,CAACkC,IAAI,EAAC,IAAE,EAAClC,IAAI,CAAC,CAAC,CAAC,CAACmC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eACN5C,OAAA;MAAK6C,GAAG,EAAErC,KAAM;MAACsC,MAAM,EAAC,OAAO;MAACC,KAAK,EAAC,OAAO;MAACC,GAAG,EAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvD5C,OAAA;MAAAsC,QAAA,GAAK,QAAM,EAACtB,OAAO,EAAC,GAAC;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC3B5C,OAAA;MAAAsC,QAAA,GAAK,YAAU,EAACjC,IAAI,CAAC,CAAC,CAAC,CAAC4C,QAAQ,EAAC,IAAE;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzC5C,OAAA;MAAAsC,QAAA,GAAK,QAAM,EAACjC,IAAI,CAAC,CAAC,CAAC,CAAC6C,IAAI,EAAC,WAAS;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAExC5C,OAAA;MAAAsC,QAAA,eACCtC,OAAA;QAAQmD,OAAO,EAAEhC,aAAc;QAAAmB,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/C,eACN5C,OAAA,CAACF,oBAAoB;MACpBO,IAAI,EAAEK,YAAa;MACnBW,cAAc,EAAEA;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG,gBAEN5C,OAAA,CAAAE,SAAA;IAAAoC,QAAA,gBACCtC,OAAA,CAACF,oBAAoB;MACpBO,IAAI,EAAEK,YAAa;MACnBW,cAAc,EAAEA;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B,eACF5C,OAAA;MAAKqC,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA,gBAE5C;AACF,CAAC;AAACxC,EAAA,CAnGID,WAAW;EAAA,QACUN,WAAW;AAAA;AAAAuD,EAAA,GADhCjD,WAAW;AAqGjB,eAAeA,WAAW;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}